// Mocks generated by Mockito 5.2.0 from annotations
// in app_phrases/test/data/datasource/mocks/main_generate_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:app_phrases/data/datasources/auth_datasource.dart' as _i3;
import 'package:app_phrases/data/datasources/remote_datasource.dart' as _i5;
import 'package:app_phrases/domain/entities/user_entity.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeUserEntity_0 extends _i1.Fake implements _i2.UserEntity {}

/// A class which mocks [AuthDatasource].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthDatasource extends _i1.Mock implements _i3.AuthDatasource {
  MockAuthDatasource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.UserEntity> createAccountWithEmailPassword(
          String? email, String? password) =>
      (super.noSuchMethod(
          Invocation.method(#createAccountWithEmailPassword, [email, password]),
          returnValue:
              Future<_i2.UserEntity>.value(_FakeUserEntity_0())) as _i4
          .Future<_i2.UserEntity>);
  @override
  _i4.Future<_i2.UserEntity> loginWithEmailPassoword(
          String? email, String? password) =>
      (super.noSuchMethod(
              Invocation.method(#loginWithEmailPassoword, [email, password]),
              returnValue: Future<_i2.UserEntity>.value(_FakeUserEntity_0()))
          as _i4.Future<_i2.UserEntity>);
  @override
  _i4.Future<String?> getToken({bool? forceRefresh = false}) =>
      (super.noSuchMethod(
          Invocation.method(#getToken, [], {#forceRefresh: forceRefresh}),
          returnValue: Future<String?>.value()) as _i4.Future<String?>);
  @override
  _i4.Future<bool> isLogged() =>
      (super.noSuchMethod(Invocation.method(#isLogged, []),
          returnValue: Future<bool>.value(false)) as _i4.Future<bool>);
}

/// A class which mocks [RemoteDatasource].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoteDatasource extends _i1.Mock implements _i5.RemoteDatasource {
  MockRemoteDatasource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<bool> updateTokenByUser(String? token) =>
      (super.noSuchMethod(Invocation.method(#updateTokenByUser, [token]),
          returnValue: Future<bool>.value(false)) as _i4.Future<bool>);
}
